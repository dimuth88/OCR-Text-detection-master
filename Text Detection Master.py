# -*- coding: utf-8 -*-
"""Text Detection Master.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-BKAO70hmvtXH8jLMMXpKSypXG8DFMuc
"""

!pip install easyocr==1.6.2

!pip install matplotlib==3.7.1

!pip install opencv-python-headless==4.5.4.60

!pip install numpy==1.24.2

import cv2
import easyocr
import matplotlib.pyplot as plt
import numpy as np
from prettytable import PrettyTable

# Read image
image_path = 'data/Image_049.jpg'
img = cv2.imread(image_path)

# Instance text detector
reader = easyocr.Reader(['en'], gpu=False)

# Detect text on image
text_ = reader.readtext(img)

threshold = 0.25

# Create a PrettyTable object
table = PrettyTable()
table.field_names = ["Detected Text", "Confidence Score"]

# Draw bbox and text
for t_, t in enumerate(text_):
    bbox, text, score = t

    if score > threshold:
        cv2.rectangle(img, bbox[0], bbox[2], (0, 255, 0), 5)
        cv2.putText(img, text, bbox[0], cv2.FONT_HERSHEY_COMPLEX, 0.65, (255, 0, 0), 2)

        # Add the text and score to the table
        table.add_row([text, score])

# Create subplots with adjusted layout
fig, axs = plt.subplots(1, 2, figsize=(12, 6), gridspec_kw={'width_ratios': [2, 1]})

# Display image in the first subplot (left)
axs[0].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
axs[0].axis('off')

# Print the table in the second subplot (right)
axs[1].axis('off')
table_str = table.get_string()
axs[1].text(0, 1, table_str, fontsize=10, family='monospace', verticalalignment='top')

plt.tight_layout()
plt.show()